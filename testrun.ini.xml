<?xml version="1.0"?>
<!--
Chroma `hmc` input file. It is based on [Carsten's `hmc`
tutorial](http://people.physik.hu-berlin.de/~urbach/lap08/hmc/).

Also it contains snippets from Joo-2008-Guide_to_Writing_Chroma_XML_Files.
-->
<Params>
  <MCControl>

    <Cfg>
      <!-- TODO What type of configuration do we want to start with, `UNIT` (cold) or `DISORDERED` (hot) or `WEAK_FIELD` (no idea) perhaps? -->
      <cfg_type>UNIT</cfg_type>
      <cfg_file>DUMMY</cfg_file>
    </Cfg>

    <RNG>
      <Seed>
        <!-- TODO Do we want any special seeds here? -->
        <elem>11</elem>
        <elem>0 </elem>
        <elem>0 </elem>
        <elem>0 </elem>
      </Seed>
    </RNG>

    <!-- TODO How man trajectories do we want? -->
    <StartUpdateNum>0</StartUpdateNum>
    <NWarmUpUpdates>0</NWarmUpUpdates>
    <NProductionUpdates>2</NProductionUpdates>
    <NUpdatesThisRun>2</NUpdatesThisRun>
    <SaveInterval>1</SaveInterval>

    <!-- This probably generates a single LIME file for everything. -->
    <SavePrefix>testrun</SavePrefix>
    <SaveVolfmt>SINGLEFILE</SaveVolfmt>

    <!-- TODO Do we want such an inline measurement? In the tutorial this is used to show the thermalization from the cold and hot start. -->
    <InlineMeasurements>
      <elem>
        <Name>POLYAKOV_LOOP</Name>
        <Frequency>1</Frequency>
        <Param>
          <version>2</version>
        </Param>
        <NamedObject>
          <gauge_id>default_gauge_field</gauge_id>
        </NamedObject>
      </elem>
    </InlineMeasurements>
  </MCControl>

  <HMCTrj>
    <Monomials>
      <!-- Quarks: up, down; degenerate -->
      <elem>
        <Name>TWO_FLAVOR_EOPREC_CONSTDET_FERM_MONOMIAL</Name>
        <InvertParam>
          <!-- TODO The only ones with `MULTIGRID` in their name seem to be the `QOP_CLOVER_MULTIGRID_INVERTER` and the various `QUDA` ones. -->
          <invType>CG_INVERTER</invType>
          <RsdCG>1.0e-12</RsdCG>
          <MaxCG>1000</MaxCG>
        </InvertParam>
        <FermionAction>
          <FermAct>WILSON</FermAct>
          <Mass>-0.1265</Mass>
          <FermionBC>
            <FermBC>TWISTED_FERMBC</FermBC>
            <!-- TODO Bartek said that we want twisted boundary conditions? From the source code I gathered that we need an `int`-array `boundary`, a `Real`-array `phases_by_pi` and another `int`-array `phases_dir`. I do not want to include pi numerically as that would certainly introduce roundoff errors, perhaps it should be something like `1.0` in the directions that we want to have the twisted boundary conditions? -->
            <boundary>1 1 1 1</boundary>
            <phases_by_pi>1.0 1.0 1.0</phases_by_pi>
            <phases_dir>1 1 1</phases_dir>
          </FermionBC>
          <!-- TODO I am not sure how `FermionAction`, `FermState` and `FermionBC` have to be nested. This way the `hmc` runs through. I am not sure whether the data generated makes any sense, though. -->
          <FermState>
            <Name>STOUT_FERM_STATE</Name>
            <!-- TODO Set a sensible ρ. -->
            <rho>1.0</rho>
            <n_smear>6</n_smear>
            <!-- One can add `orthog_dir` to smear in certain directions. -->
            <FermionBC>
              <!-- TODO Do those boundary conditions have to be the same? Do they have to be something different? -->
              <FermBC>TWISTED_FERMBC</FermBC>
              <boundary>1 1 1 1</boundary>
              <phases_by_pi>1.0 1.0 1.0</phases_by_pi>
              <phases_dir>1 1 1</phases_dir>
            </FermionBC>
          </FermState>
        </FermionAction>
        <ChronologicalPredictor>
          <Name>LAST_SOLUTION_4D_PREDICTOR</Name>
        </ChronologicalPredictor>
        <NamedObject>
          <monomial_id>up_down_wilson</monomial_id>
        </NamedObject>
      </elem>

      <!-- Quarks: strange -->
      <elem>
        <Name>TWO_FLAVOR_EOPREC_CONSTDET_FERM_MONOMIAL</Name>
        <InvertParam>
          <!-- TODO The only ones with `MULTIGRID` in their name seem to be the `QOP_CLOVER_MULTIGRID_INVERTER` and the various `QUDA` ones. -->
          <invType>CG_INVERTER</invType>
          <RsdCG>1.0e-12</RsdCG>
          <MaxCG>1000</MaxCG>
        </InvertParam>
        <FermionAction>
          <FermAct>PARWILSON</FermAct>
          <Mass>-0.057</Mass>
          <!-- TODO This `H` needs to be tuned. -->
          <H>0.33</H>
          <FermionBC>
            <FermBC>SIMPLE_FERMBC</FermBC>
            <boundary>1 1 1 -1</boundary>
          </FermionBC>
        </FermionAction>
        <ChronologicalPredictor>
          <Name>LAST_SOLUTION_4D_PREDICTOR</Name>
        </ChronologicalPredictor>
        <NamedObject>
          <monomial_id>strange_wilson</monomial_id>
        </NamedObject>
      </elem>

      <!-- Clover: up, down -->
      <elem>
        <!-- The clover term depends on the Gauge fields in the even-even term, so we cannot use `CONSTDET` but must use `LOGDET`. Is that correct? -->
        <Name>TWO_FLAVOR_EOPREC_LOGDET_FERM_MONOMIAL</Name>
        <InvertParam>
          <!-- TODO The only ones with `MULTIGRID` in their name seem to be the `QOP_CLOVER_MULTIGRID_INVERTER` and the various `QUDA` ones. -->
          <invType>CG_INVERTER</invType>
          <RsdCG>1.0e-12</RsdCG>
          <MaxCG>1000</MaxCG>
        </InvertParam>
        <FermionAction>
          <FermAct>CLOVER</FermAct>
          <Mass>-0.1265</Mass>
          <!-- In Duerr-2009-Scaling_Study_of_Dynamically_Smeared-Link_Clover_Fermions they use c_{SW} = 1, so I do it here as well. -->
          <clovCoeff>1.0</clovCoeff>
          <FermionBC>
            <!-- TODO What about boundary conditions here? -->
            <FermBC>TWISTED_FERMBC</FermBC>
            <boundary>1 1 1 1</boundary>
            <phases_by_pi>1.0 1.0 1.0</phases_by_pi>
            <phases_dir>1 1 1</phases_dir>
          </FermionBC>
          <FermState>
            <Name>STOUT_FERM_STATE</Name>
            <!-- TODO Set a sensible ρ. -->
            <rho>1.0</rho>
            <n_smear>6</n_smear>
            <!-- One can add `orthog_dir` to smear in certain directions. -->
            <FermionBC>
              <!-- TODO Do those boundary conditions have to be the same? Do they have to be something different? -->
              <FermBC>TWISTED_FERMBC</FermBC>
              <boundary>1 1 1 1</boundary>
              <phases_by_pi>1.0 1.0 1.0</phases_by_pi>
              <phases_dir>1 1 1</phases_dir>
            </FermionBC>
          </FermState>
        </FermionAction>
        <ChronologicalPredictor>
          <Name>LAST_SOLUTION_4D_PREDICTOR</Name>
        </ChronologicalPredictor>
        <NamedObject>
          <monomial_id>up_down_clover</monomial_id>
        </NamedObject>
      </elem>

      <!-- Hasenbusch term for up and down quarks. -->
      <!-- FIXME This is not available in Chroma any more, it must have been named differently at some point between 2008 and 2016. -->
      <annotation>
      <elem>
        <Name>TWO_FLAVOR_EOPREC_CONSTDET_HASENBUSCH_FERM_MONOMIAL</Name>
        <InvertParam>
          <invType>CG_INVERTER</invType>
          <RsdCG>1.0e-07</RsdCG>
          <MaxCG>1000</MaxCG>
        </InvertParam>
        <FermionAction>
          <FermAct>WILSON</FermAct>
          <Mass>-0.1265</Mass>
          <FermionBC>
            <FermBC>SIMPLE_FERMBC</FermBC>
            <boundary>1 1 1 -1</boundary>
          </FermionBC>
        </FermionAction>
        <FermionActionPrec>
          <FermAct>PARWILSON</FermAct>
          <Mass>-0.1265</Mass>
          <!-- TODO This `H` needs to be tuned. -->
          <H>0.33</H>
          <FermionBC>
            <FermBC>SIMPLE_FERMBC</FermBC>
            <boundary>1 1 1 -1</boundary>
          </FermionBC>
        </FermionActionPrec>
        <ChronologicalPredictor>
          <Name>ZERO_GUESS_4D_PREDICTOR</Name>
        </ChronologicalPredictor>
        <NamedObject><monomial_id>hasen</monomial_id></NamedObject>
      </elem>
      </annotation>

      <!-- The gauge action should be just fine, the β is set to the value from the paper. -->
      <elem>
        <Name>GAUGE_MONOMIAL</Name>
        <GaugeAction>
          <Name>WILSON_GAUGEACT</Name>
          <beta>3.3</beta>
          <GaugeBC>
            <Name>PERIODIC_GAUGEBC</Name>
          </GaugeBC>
        </GaugeAction>
        <NamedObject>
          <monomial_id>gauge</monomial_id>
        </NamedObject>
      </elem>
    </Monomials>

    <Hamiltonian>
      <monomial_ids>
        <elem>gauge</elem>
        <elem>up_down_wilson</elem>
        <elem>up_down_clover</elem>
        <elem>strange_wilson</elem>
        <!-- <elem>up_down_hasenbusch</elem> -->
      </monomial_ids>
    </Hamiltonian>

    <MDIntegrator>
      <!-- TODO Is that the desired timescale? -->
      <tau0>0.5</tau0>
      <Integrator>
        <!-- TODO Is that a suitable integrator or do we want something fancier? -->
        <Name>LCM_STS_LEAPFROG</Name>
        <!-- TODO This would give a trajectory length of 12.5. Shouldn't the trajectory length be in the order of unity? -->
        <n_steps>25</n_steps>
        <monomial_ids>
          <elem>up_down_wilson</elem>
          <elem>up_down_clover</elem>
          <elem>strange_wilson</elem>
        </monomial_ids>
        <!-- TODO This subintegrator is just an example, probably we want to have much more stuff. -->
        <SubIntegrator>
          <Name>LCM_STS_LEAPFROG</Name>
          <n_steps>2</n_steps>
          <monomial_ids>
            <elem>gauge</elem>
          </monomial_ids>
        </SubIntegrator>
      </Integrator>
    </MDIntegrator>

    <!-- TODO Check that the time really goes last and not first. From the various tutorials it seems that the last value is special, that should be time. -->

    <!-- <nrow>24 24 24 64</nrow> -->
    <nrow>4 4 4 8</nrow>

  </HMCTrj>

</Params>

<!-- vim: set sw=2 et : -->
